// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String   // Simpan password yang sudah di-hash
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())

  orders    Order[]
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  imageUrl    String?
  category    MenuCategory
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems  OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  totalPrice Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())

  items      OrderItem[]
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  order      Order     @relation(fields: [orderId], references: [id])
  orderId    Int
  menuItem   MenuItem  @relation(fields: [menuItemId], references: [id])
  menuItemId Int
  quantity   Int
  price      Float
}

enum Role {
  CUSTOMER
  ADMIN
}

enum MenuCategory {
  MAINCOURSE
  COFFEE
  NONCOFFEE
  SNACK
  DESERT
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}
